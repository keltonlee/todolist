{"version":3,"sources":["reportWebVitals.js","TodoTitle.js","TodoAddForm.js","TodoListItem.js","TodoList.js","TodoApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TodoTitle","React","Component","TodoAddForm","props","onSubmit","bind","this","refs","itemName","focus","event","preventDefault","newItemValue","value","addItem","form","reset","ref","className","type","placeholder","TodoListItem","onClickClose","onClickDone","index","parseInt","removeItem","TodoDone","todoClass","item","done","onClick","TodoList","items","map","todoItems","push","TodoApp","state","todoItem","unshift","length","setState","itemIndex","splice","todo","id","initItems","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e82e1dc.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nclass TodoTitle extends React.Component {\n    render () {\n    return <h1>CGU Todo list</h1>;\n    }\n}\nexport default TodoTitle","import React from 'react';\nclass TodoAddForm extends React.Component {\n        constructor(props) {\n        super(props);\n        this.onSubmit = this.onSubmit.bind(this);\n      }\n      componentDidMount() {\n        this.refs.itemName.focus();\n      }\n      onSubmit(event) {\n        event.preventDefault();\n        var newItemValue = this.refs.itemName.value;\n        \n        if(newItemValue) {\n          this.props.addItem({newItemValue});\n          this.refs.form.reset();\n        }\n      }\n      render () {\n        return (\n          <form ref=\"form\" onSubmit={this.onSubmit} className=\"form-inline\">\n            <input type=\"text\" ref=\"itemName\" className=\"form-control\" placeholder=\"add a new todo...\"/>\n            <button type=\"submit\" className=\"btn btn-default\">Add</button> \n          </form>\n        );   \n      }\n    // constructor(props) {\n    // super(props);\n    // this.state = { username: '' };\n    // this.handleChange = this.handleChange.bind(this);\n    // this.handleSubmit = this.handleChange.bind(this);\n    //  } \n    // handleChange(event){\n    //     this.setState({value: event.target.value});\n    // }\n    // handleSubmit(event) {\n    //     this.setState({value: event.target.value});\n    //     event.preventDefault();\n    // }\n    // render() {\n    //     return (\n    //         <form onSubmit={this.handleSubmit}>\n    //         <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n    //         <input type=\"submit\" value=\"Submit\" />\n    //         </form>\n    //     );\n    // }\n}\nexport default TodoAddForm","import React from 'react';\nimport './done.css';\nclass TodoListItem extends React.Component {\n    constructor(props) {\n      super(props);\n      this.onClickClose = this.onClickClose.bind(this);\n      this.onClickDone = this.onClickDone.bind(this);\n    }\n    onClickClose() {\n      var index = parseInt(this.props.index);\n      this.props.removeItem(index);\n    }\n    onClickDone() {\n      var index = parseInt(this.props.index);\n      this.props.TodoDone(index);\n    }\n    render () {\n      var todoClass = this.props.item.done ? \n          \"done\" : \"undone\";\n      return(\n        <li className=\"list-group-item \">\n          <div className={todoClass}>\n            <button type=\"button\" onClick={this.onClickDone}>&radic;</button>     \n            {this.props.item.value}\n            <button type=\"button\" className=\"close\" onClick={this.onClickClose}>&times;</button>\n          </div>\n        </li>     \n      );\n    }\n  }\n  export default TodoListItem","import React from 'react';\nimport TodoListItem from './TodoListItem.js';\nclass TodoList extends React.Component {\n    render () {\n      var items = this.props.items.map((item, index) => {\n        return (\n          <TodoListItem key={index} item={item} index={index} removeItem={this.props.removeItem} TodoDone={this.props.TodoDone} />\n        );\n      });\n      return (\n        <ul className=\"list-group\"> {items} </ul>\n      );\n    }\n  }\n  export default TodoList","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoTitle from './TodoTitle.js';\nimport TodoAddForm from './TodoAddForm.js';\nimport TodoList from './TodoList.js';\nimport './done.css';\n\nvar todoItems = [];\ntodoItems.push({index: 1, value: \"learn react\", done: false});\ntodoItems.push({index: 2, value: \"Go shopping\", done: true});\ntodoItems.push({index: 3, value: \"buy flowers\", done: true});\nclass TodoApp extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = { todoItems: todoItems };\n        this.addItem = this.addItem.bind(this);\n        this.removeItem = this.removeItem.bind(this);\n        this.TodoDone = this.TodoDone.bind(this);\n    } \n    addItem(todoItem) {\n        todoItems.unshift({\n            index: todoItems.length+1, \n            value: todoItem.newItemValue, \n            done: false\n        });\n        this.setState({todoItems: todoItems});\n    }\n    removeItem (itemIndex) {\n        todoItems.splice(itemIndex, 1);\n        this.setState({todoItems: todoItems});\n    }\n    TodoDone(itemIndex) {\n        var todo = todoItems[itemIndex];\n        todoItems.splice(itemIndex, 1);\n        todo.done = !todo.done;\n        todo.done ? todoItems.push(todo) : todoItems.unshift(todo);\n        this.setState({todoItems: todoItems});\n    }\n    render() {\n        return (\n            <div id=\"main\"> \n                <TodoTitle />\n                <TodoList items={this.props.initItems} removeItem={this.removeItem} TodoDone={this.TodoDone}/>\n                <TodoAddForm addItem={this.addItem} />\n            </div>\n        );\n    }\n}\nexport default TodoApp\nReactDOM.render(<TodoApp initItems={todoItems}/>, document.getElementById('root'));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport TodoApp from './TodoApp.js';\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}